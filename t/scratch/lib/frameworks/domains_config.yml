archiveofourown:
    reffs:
        domain:
            d:
                hostname: [null,www]
                tld: [org]
        bp_author:
            d_user:         [user, _user_]
            d_user_profile: [user, _user_,profile]
            d_user_alias:   [user, _user_, pseuds, _alias_]
        bp_series:
            d_series:       [series, _series_uid_]
        bp_content:
            d_part:         [works, _work_uid_, chapters, _part_uid_, {show_comments: true, view_adult: true}]
            d_work:         [works, _work_uid_, {show_comments: true, view_adult: true, view_full_work: true}]
        bp_listing:
            d_series:       [user, _user_, series, {page: _iter}]
            d_work:         [user, _user_, works, {page: _iter}]
        bp_misc:
            d_login:        [users, login]
    fetch:
        cookies :        [__cf_bm, _cfuvid, _otwarchive_session, view_adult,cf_clearance]
        workflows:
            w0 : [a_init, a_login, a_content]
            w1 : [a_content]
        actions:
            a_content:
            a_init:
                url: _domain_
                do:
                - [ click, e_tos_agree_clk, 5, 0]
                - [ click, e_tos_agree_clk, 5, 0]
                - [ click, e_accept_tos_clk, 1, 0]
            a_login:
                url : m_login
                payload: 
                    user[login]: _usr_ 
                    user[password]: _pwd_
                    user[remeber_me]: 0 
                    commit: "Log+in" 
                    authenticity_token: g_token_value
        gets:
            g_pwd:           [e_pwd, name]
            g_usr:           [e_usr, name]
            g_token_value:   [e_token, value]
            g_token_name:    [e_token, name]
        elements:
            e_tos :                   [body, [div, id='tos_prompt']]
            e_tos_accept:             [_css, '#accept_tos']
            e_tos_agree:              [_css, '#tos_agree']
            e_user:                   [_css, '#user_login']
            e_remeber_me:             [_css, '#user_remeber_me']
            e_password:               [_css, '#user_password']
            e_submit:                 [_css, '#input.submit']
            e_token:                  [input, name='authenticity_token']
            e_csrf:                   [meta, meta, name=csrf-token, content]
            #--------work
            # = meta
            e_meta:                   [div, class=wrapper,[dl, class=work meta group]]
            ev_tags:                  [_in, e_meta, dd, class="freeform tags", [ul,[_for, li, [ a,.txt]]]]
            ev_stats:                 [_in, e_meta, dd, class="stats", [dl, [_for, [_hash,[ dt,.txt], [dd, [_exists, a, .txt]]]]]]
            # - preface
            e_preface:                [div, class='preface_group']
            ev_author:                [_in, e_preface, h3, class='byline heading',[a,.txt]]
            ev_title:                 [_in, e_preface, h2, class='title heading', .txt]
            ev_dscp:                   [_in, e_preface, div, class="summary module", [blockquote  .txt]]
            # - workskin
            e_workskin:               [div, id='workskin']
            e_chapters:               [_in, e_workskin, div, id=chapters, role=article]
            e_chapter:                [_in, e_chapters, div, class="chapter"]
            e_chapter_preface:        [_in, e_chapter, div, class="chapter preface group"]
            ev_chroni:                [_in, e_chapter_preface, h3, [a, .txt]]
            ev_chrono:                [_in, e_chapter_preface, h3, [_not, a, .txt, '2:']]
            ev_txt:                   [_in, e_chapter, div, class="userstuff module", [h3, id="work", .txt]]
            #titles
            e_splash_titles:        [ol, class="work index group"]
            evv_splash_serie:       [_in, e_splash_tites,li, [div, [h4,[a,.href]]]]
            ev_splash_title_tags:   [_in, e_splash_tites,ul, class="tags comma", [_for, li, [a,.txt]]]
            #series
            e_splash_series:        [ul, class="series index group"]
            evv_splash_series:      [_in, e_splash_series, li, [div, [h4,[a,.href]]]]
            ev_splash_series_tags:  [_in, e_splash_series, ul, class="tags comma",[_for, li, [a,.txt]]]
            #Profile
            e_profile:              [div, class="user home profile"]
            ev_stats:               [_in, e_profile, dl, [_for, [_hash, [dt,.txt], [dd,[_exists, a, .txt]]]]]
            ev_bio:                 [_in, e_profile, div, class='bio module',[blockquote, .txt]]


sofurry:
    reffs:
        domain:
            d:
                hostname: [null, www]
                tld: [com]
            u:
                hostname: [_user_]
                tld: [com]
        bp_author:
            u_user:         []
        bp_content:
            d_work:           [view, _work_uid_]
        bp_bin:
            d_story_folder:   [browse, folder, stories, {by: _user_uid_, folder: _story_folder_uid_}]
            d_art_folder:     [browse, folder, art, {by: _user_uid_, folder: _art_folder_uid_}]
        bp_listing: 
            d_stories:        [browse, user, stories, {uid: _user_uid_, stories-page: _iter_}]
            u_journals:       [user, journals]
            u_art:            [user, artwork]
        bp_misc: 
            d_icon:           [std, avatar, {user: _user_id_, character:  _character_, level: _level_}]
            d_login:          [user, login]
            d_pdf:            [export,ePub,{id: _work_id_}]
    workflows:
        w_:      [a_login, a_init, a_html]
        w_crawl: [a_login, a_init, a_compute]
    actions:
        a_login:
            url: m_login
            pwd: LoginForm[sfLoginPassword]
            usr: LoginForm[sfLoginUsername]
            token: null
        a_init:
            url: [_url]
        a_html:
            url: null
        a_compute:
            url: null
    gets:
        g_author:          [e_author, {text}]
        g_author_stats:    [e_joined, [where, [strong>, {text}]]]
        g_title:           [e_title, {text}]
        g_tags:            [[and, e_tag_of, e_tag_ef], [for, e_tag, {text}]]
        g_dscr:            [e_content,e_dscr]
        g_pdf:             [s_pdf]
        g_txt:             [e_content, e_txt, {text}]
        g_chrono:          [e_chrons, [for, e_chrono, where, [strong>, {text}]]]
        g_chroni:          [e_chrons, [for, e_chroni, where, [strong>, {text}]]]
        g_stats:           [e_stat_header, e_stats, [by, line, ['[7:],views[:3],faves[:1],comments[:1],vote[:1]]']]]
        g_image:           [in, s_art for, w_work, where, e_contentimage]
        g_folder_image:    [in s_art, in, e_folders for, e_folder_link]
        g_titles:          [in, s_titles for, w_work, where, e_titles]
        g_folder_titles:   [in, s_titles, in, e_folders for, e_folder_link]
        g_journals:        [in, s_journals, for w_work]
    _elements:
        e_author:        [span, class="sf-username sfTextMedium"]
        e_title:         [span, id='sfContentTitle', itemprop='name'] 
        e_chrons:        [div, class="section sf-storyfolder-link"]
        e_chrono_:       [div, class='section-content-list']
        e_chroni_:       [span, class='sfTextMedium']
        e_tag_of_:       [div class="section-title", text==Official Tags]
        e_tag_uf_:       [div class="section-title", text==UnOfficial Tags]
        e_tag:           [a class='sf-tag',<text>]
        e_content_:      [div, id="sf-viewcontent-content"]
        e_content_txt:   [div, id="sfContentBody"]
        e_dscr:          [div, 'id=sfContentDescription']
        e_joined_:       [span, class="user-stats sfTextMedLight"]
        e_stats_:        [div, class='section-content']
        e_folders_:      [div, class="sfBrowseListFolders"]
        e_folder_link_:  [a, class='sfTextMedium']
        e_content_image_: [div, id="sfContentImage]
        e_titles_:        [span class='sf-browse-shortlist-title']


blokfort.com:
  reffs:
    content:
      _work:      [_work_]
    splash:
      _works:     [nsfw-comics]
  _workflows:
    _w:           [_init, _content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
    IMAGES: [e_images, [for, _CONTENT_, r<pdf>]]
  _elements:
    _AUTHOR_:         'Blokfort'
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []
    e_images:         []


files.catbox.moe:
  reffs:
    content:
      _work: [files, ._domain_, _work_uid_, ._fext_]
  _workflows:
    _w: [a_content]
  _actions:
    a_content:
      url: [_url]
  _wkfl_vars: null
  _elements: 
    _CONTENT_: []

catbox.moe:
  reffs:
    content:
      _work:       [c, _work_uid_]
  _workflows:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
    IMAGES: [e_images, [for, _CONTENT_, r<pdf>]]
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []
    e_images:         []


docs.google.com:
  reffs:
    content:
      _work:      [document, d, _work_uid_]
      _work_edit: [document, d, _work_uid_, edit]
      _work_pub:  [document, d, e, _work_uid_, pub]
  _workflows:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _CONTENT_:        []


drive.google.com:
  reffs:
    content:
      _work:      [file, d, _work_uid_]
      _work_view: [file, d, _work_uid_, view]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


fiction.live:
  reffs:
    content:
      _part:      [stories, _work_, _work_uid_, _part_, _part_uid_]
    flash:
      _flash:     [stories, _work_, _work_uid_]
    user:
      _user:      [user, _user_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


ghostbin.com:
  reffs:
    content:
      _work:      [p_folder, _work_uid_]
      _work_nofd: [_work_uid_]
    path:
      _folder:    [_folder_uid_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


git.io:
  reffs:
    content:
      _work:      [_work_uid_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


hardbin.com:
  reffs:
    content:
      _work:          [ipfs, _work_uid_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


itch.io:
  cookies:            [allow_nsfw_games, itchio_refs, itchio_token, ref%3aregister%3areferrer]
  reffs :
    content:
      _work: [u_user, _work_uid_]
    user:
      _user: [_user_, ._domain_]
  _workflows:
    w_:             [a_init, a_post, a_content]
    w_purchase:     [a_init_purchase, a_post_purchase, a_post, a_content]
  _actions: 
    a_init:
      url :           [_url]
      wkfl_vars:      [g_csrf_token]
    a_post:
      url :           [_url, '/file/7456108?source=view_game&as_props=1&after_download_lightbox=true']
      payload: 
        csrf_token:   [g_csrf_token]
    a_content:
      url :           [g_post_rsp_url]
    a_init_purchase:
      url :           [_url, /purchase]
      wkfl_vars:      [g_csrf_token]
    a_post_purchase:
      url :           [_url, /download_url]
      payload: 
        csrf_token:   [g_csrf_token]
  _wkfl_vars:
    _AUTHOR_:         [e_head_title,        [_text_], [till, by]]
    _TITLE_:          [e_head_title,        [_text_], [after, by] ] 
    _DSCR_:           [e_dscr_raw,          [1, p]]
    _CONTENT_:        []
    g_other_titles:   [e_view_more,         hreff]
    g_to_other_title: [e_other_game,        hreff]
    g_other_title:    [e_other_game,        _text_]
    g_csrf_token:     [e_csrf_token,        name]
    g_post_rsp_url:   [a_download_post_,    url]
    g_is_success:     [a_download_post_,    name]
  _elements:
    e_head_title:     [[head, title], [_text_]]
    e_dscr_raw:       [div,  class, formatted_description user_formatted]
    e_dls_class:      [div,  class, uploads]
    e_dl_class:       [div,  class, upload]
    e_dl_info_class:  [div,  class, info_column]
    e_dl_button:      [a,    class, button download_btn]
    e_comments:       [div,  class, game_comments_widget base_widget]
    e_csrf_token:     [meta, name,  csrf_token]
    e_view_more:      [a,    class, action_btn view_more]
    e_more_games:     [div,  class, game_grid_widget base_widget user_game_grid]
    e_other_game:     [a,    class, title game_link]
    e_dl_direct:      [a,    class, direct_download_btn]


literotica:
  reffs:
    content:
      _page: [s, _work_, '?page=', page_]
      _page_none: [s, _work_]
    splash:
      _work: [_user_, works, stories, all]
    user:
      _user: [users, _user_]
  _workflows:
    w_:
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


mcstories.com:
  reffs:
    content:
      _work: [_work_, _work_, ._fext_]
    flash:
      _work: [_work_, index, .html]
    splash:
      _user: [users, index, .html]
    user:
      _user: [users, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


mega.nz:
  reffs:
    bin:
      _work: [p_folders]
    content:
      _work: [p_folders, file, _work_uid_]
    path:
      _folders: [folder, _folder_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


pastebin.com:
  reffs:
    content:
      _work: [_work_uid_]
    splash:
      _work: [u_user]
    user:
      _user: [u, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


pastefs.com:
  reffs:
    content:
      _work: [pid, _work_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


pastes.psstaudio.com:
  reffs:
    content:
      _work: [post, _work_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


poneb.in:
  reffs:
    content:
      _work: [_work_uid_]
    splash:
      _work: [u_user]
    user:
      _user: [u, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


raw.githubusercontent.com:
  reffs:
    bin:
      _repo: [_user_, _repo_, _version_]
    content:
      work: [b_repo, p_folders, _work_uid_]
      work_nofolers: [b_repo, _work_uid_]
    path:
      _folders: [_folders_]
    user:
      _user: [_user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


rentry:
  reffs:
    content:
      _work: [_work_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


snekguy.com:
  _author_: snekguy
  reffs:
    content:
      _work: [stories, p_group, _work_]
      _work_edition: [stories, p_group, _work_, _edition_]
    path:
      _group: [_group_]
    splash:
      _work: [stories]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


snootgame.xyz:
  reffs:
    content:
      _work: [en, bin, _work_uid_, .zip]
    flash:
      _flash: []
    splash:
      _downloads: [en, download, .html]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


www.fanfiction.net:
  reffs:
    content:
      _part: [s, _work_uid_, _part_, _work_]
    user:
      _user: [u, _user_uid_, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


www.furaffinity.net:
  reffs:
    content:
      _work: [view, _work_uid_]
    splash:
      _work: [gallery, _author_, iter_, '\?']
    user:
      _user: [user, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
      url: https://www.furaffinity.net/login
      usr: name
      pwd: pass
      token: null
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
    AUTHOR:          [e_author, {text}]
    AUTHOR_STATS:    [e_joined, [where, [strong>, {text}]]]
    TITLE:           [e_title, {text}]
    TAGS:            [[and, e_tag_of, e_tag_ef], [for, e_tag, {text}]]
    DSCR:            [e_content,e_dscr]
    PDF:             [s_pdf]
    TXT:             [e_content, e_txt, {text}]
    CHRONO:          [e_chrons, [for, e_chrono, where, [strong>, {text}]]]
    CHRONI:          [e_chrons, [for, e_chroni, where, [strong>, {text}]]]
    STATS:           [e_stat_header, e_stats, [by, line, ['[7:],views[:3],faves[:1],comments[:1],vote[:1]']]]
    IMAGE:           [in, s_art for, w_work, where, e_contentimage]
    FOLDER_IMAGE:    [in s_art, in, e_folders for, e_folder_link]
    TITLES:          [in, s_titles for, w_work, where, e_titles]
    FOLDER_TITLES:   [in, s_titles, in, e_folders for, e_folder_link]
    JOURNALS:        [in, s_journals, for w_work]
  _elements:

    e_info: [div.info]
    e_tag2: [div, class='section-ody info",[div,[strong],[span]]]
    e_tag:  [section, class='tags-mobile',[span,  class='tags', [a]]]

    e_tag2: [section, class="folders-moile",[div,[div,[a]]]]

    e_joined: [span, class="hideonmoile" >registered<]
    e_text:     [div, class="submission-content"]
    e_title:    [.submission-title]
    e_author:   [a]
    e_views:    [div, class='views']
    e_favs:     [div, class='favorites']
    e_comments: [div, class='comments']
    e_rating:   [div, class='rating']
    e_date: [.popup_date]
    e_stats: [div, class='table',[div, class='highlight']]
    e_titles: [figcaption, [p ,[a]]]

www.reddit.com:
  reffs:
    bin:
      _sub:  [r, _sub_]
    content:
      _work: [b_sub, comments, _work_uid_, _work_]
    user:
      _user: [user, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _CONTENT_:        []


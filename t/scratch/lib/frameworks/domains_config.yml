archiveofourown:
    url:
        dmn:
            d:
                hstns:               ['', www]
                hstn_var:            null
                tlds:                [org]
        _usr:
            u_usr:                   [d, users, _user(node;author)_, p_psueds(1)]
            u_usr_profile:           [d, users, _user(node;author)_, profile]
        path: 
            p_psueds:                [psueds, _psued(attr;author;alias)_]
        _listing:
            l_series:                [d, series, _series(node;series)_, {page: _page(content;iter;1)_}]
            l_series_listing:        [d, users, _usr(node;author)_, p_psueds(1), series, {page: _page(content;iter;1)_}]
            l_work_listing:          [d, users, _usr(node;author)_, works, {page: _page(content;iter;1)_}]
        _content:
            c_chapter:               [d, works, _work(parent;part;title)_, chapters, _chapter(node;part)_, {show_comments: true, view_adult: true}]
            c_work:                  [d, works, _work(node;title)_, {show_comments: true, view_adult: true, view_full_work: true}]
        _misc:
            m_login:                 [d, users, login]
    fetch:
        params:
            enabled: True
            login: False
            crawl: True
        workflows:
            w : 
            - a_init
            #- a_content
        dmns:
            d:
                hstns:               ['', www]
                hstn_var:            null
                tlds:                [org]
        paths: 
            p_psueds:                [psueds, _psued(attr;author;alias)_]
        urls:
            _user:
                u_user:
                    cnfg: [d, users, _user(node;author)_, p_psueds(1)]
                    actions: 
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
                u_user_profile:
                    cnfg: [d, users, _user(node;author)_, profile]
                    actions:
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
            _listing:
                l_series_listing:
                    cnfg: [d, users, _usr(node;author)_, p_psueds(1), series, {page: _page(content;iter;1)_}]
                    actions: 
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
                l_work_series_listing:
                    cnfg: [d, series, _series(node;series)_, {page: _page(content;iter;1)_}]
                    actions:
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
                l_series:
                    cnfg: [d, series, _series(node;series)_, {page: _page(content;iter;1)_}]
                    actions:
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
            _content:
                c_work:
                    cnfg: [d, works, _work(node;title)_, {show_comments: true, view_adult: true, view_full_work: true}]
                    elements:
                        e_meta:                   [div, class=wrapper,[dl, class=work meta group]]
                        ev_tags:                  [_in, e_meta, dd, class="freeform tags", [ul,[_for, li, [ a,.txt]]]]
                        ev_stats:                 [_in, e_meta, dd, class="stats", [dl, [_for, [_hash,[ dt,.txt], [dd, [_exists, a, .txt]]]]]]
                        e_w_preface:              [div, class=preface group]
                        e_w_author:               [_in, e_w_preface, [h3, class=byline heading,[a,_user_=txt]]]
                        e_title:                  [_in, e_w_preface, h2, class='title heading', _title_=txt]
                        e_dscp:                   [_in, e_w_preface, div, class="summary module", [blockquote, _dscp_=txt]]
                        e_workskin:               [div, id='workskin']
                        e_chapters:               [_in, e_workskin, div, id=chapters, role=article]
                        e_chapter:                [_in, e_chapters, div, class="chapter"]
                        e_chapter_preface:        [_in, e_chapter, div, class="chapter preface group"]
                        ev_chroni:                [_in, e_chapter_preface, h3, [a, .txt]]
                        ev_chrono:                [_in, e_chapter_preface, h3, [_not, a, .txt, '2:']]
                        ev_txt:                   [_in, e_chapter, div, class="userstuff module", [h3, id="work", .txt]]
                    actions:
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
                c_chapter:
                    cnfg: [d, works, _work(parent;part;title)_, chapters, _chapter(node;part)_, {show_comments: true, view_adult: true}]
                    actions:
                        init:
                            do:
                            - [ e_tos, _exists]
                            - [ _no_soup,_skipif(!0), e_tos_agree, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_agree2, _click(1)]
                            - [ _no_soup,_skipif(!0), e_tos_accept, _click(1)]
                            - [_wait(2), e_w_dl, _exists]
                            - [e_w_author, _exists]
                        content:
                            do:
                            - [_no_soup, '_skipif(!0,4)', e_w_dl, _click(1), _wait(1)]
                            - [_no_soup, '_skipif(!0,4)', e_w_dl2, _click(1), _wait(1)]
                        crawl:
                        do:
                        - []
            _misc:
                m_login:
                    cnfg: [d, users, login]
                    actions:
                        init:
                            do:
                            - []
                        content:
                            do:
                            - []
                        crawl:
                            do:
                            - []
                        payload: 
                        user[login]: _usr_ 
                        user[password]: _pwd_
                        user[remeber_me]: 0 
                        commit: "Log+in" 
                        authenticity_token: g_token_value
        elements:
            e_tos :                   [body, [div, id=tos_prompt]]
            e_tos_accept:             [_css, '#accept_tos']
            e_tos_agree:              [_css, '#tos_agree']
            e_tos_agree2:             [_css, '#data_processing_agree']
            e_w_dl:                   [_css, '#main > ul.work.navigation.actions > li.download > a']
            e_w_dl2:                  [_css, '#main > ul.work.navigation.actions > li.download > ul > li:nth-child(4) > a']
            #--------work

            #titles
            e_user:                   [_css, '#user_login']
            e_remeber_me:             [_css, '#user_remeber_me']
            e_password:               [_css, '#user_password']
            e_submit:                 [_css, '#input.submit']
            e_token:                  [input, name='authenticity_token']
            e_csrf:                   [meta, meta, name=csrf-token, content]
            e_splash_titles:          [ol, class="work index group"]
            evv_splash_serie:         [_in, e_splash_tites,li, [div, [h4,[a,.href]]]]
            ev_splash_title_tags:     [_in, e_splash_tites,ul, class="tags comma", [_for, li, [a,.txt]]]
            #series
            e_splash_series:        [ul, class="series index group"]
            e_splash_series:         [_in, e_splash_series, li, [div, [h4,[a,.href]]]]
            e_splash_series_tags:  [_in, e_splash_series, ul, class="tags comma",[_for, li, [a,.txt]]]
            #Profile
            e_usr_profile:              [div, class="user home profile"]
            e_usr_stats:               [_in, e_profile, dl, [_for, [_hash, [dt,.txt], [dd,[_exists, a, .txt]]]]]
            e_usr_bio:                 [_in, e_profile, div, class='bio module',[blockquote, .txt]]




sofurry:
    url:
        dmn:
            d:
                hstns:               [www,'']
                hstn_var:            null
                tlds:                [com]
            u:
                hstns:               []
                hstn_var:            _user(node;author)_
                tlds:                [com]
        _usr:
            u_usr:                   [u]
        _content:
            c_view:                  [d, view, _view_]
        _listing: 
            l_folder:                [d, browse, folder, stories, {by: _usr_uid(attr;author;attr=uid)_, folder: _folder_uid(node;attr;uid)_}]
            l_listing:               [d, browse, user, stories, {by: _usr_uid(attr;author;uid)_, stories-page: _page(content;iter;1)_}]
            l_listing2:              [u, stories, {convert_after_fetch: 'l_listing'},{}]
        _misc: 
            m_login:                 [d, user, login]
    fetch:
        params:
            enabled: False
            login: False
        dmns:
            d:
                hstns:               [www,'']
                hstn_var:            null
                tlds:                [com]
            u:
                hstns:               []
                hstn_var:            _user(node;author)_
                tlds:                [com]
        paths: {}
        urls:
            _usr:
                u_usr:
                    cnfg:
                    actions:
                        init:
                            do:
                            - []
                        contnt:
                            do:
                            - []
                        crawl:
                            do:
                            - []
            _listings:
                l_folder:
                    cnfg: [d, browse, folder, stories, {by: _usr_uid(attr;author;attr=uid)_, folder: _folder_uid(node;attr;uid)_}]
                    actions:
                        init:
                            do:
                            - []
                        contnt:
                            do:
                            - []
                        crawl:
                            do:
                            - []
                l_listing:
                    cnfg: [d, browse, user, stories, {by: _usr_uid(attr;author;uid)_, stories-page: _page(content;iter;1)_}]
                    actions:
                        init:
                            do:
                            - []
                        contnt:
                            do:
                            - []
                        crawl:
                            do:
                            - []
                l_listing2:
                    cnfg: [u, stories, {convert_after_fetch: 'l_listing'},{}]
                    actions:
                        init:
                            do:
                            - []
                        contnt:
                            do:
                            - []
                        crawl:
                            do:
                            - []
            _contents:
                c_view:
                    cnfg: [d, view, _view_]
                    actions:
                        init:
                            do:
                            - []
                        contnt:
                            do:
                            - []
                        crawl:
                            do:
                            - []
            _misc:
                m_login:
                    cnfg: [d, user, login]
                    actions:
                        init:
                            do:
                            - []
                        content:
                            do:
                            - []
                        crawl:
                            do:
                            - []
                    pwd: LoginForm[sfLoginPassword]
                    usr: LoginForm[sfLoginUsername]
                    token: null
        _elements:
                e_author:        [span, class="sf-username sfTextMedium"]
                e_title:         [span, id='sfContentTitle', itemprop='name'] 
                e_chrons:        [div, class="section sf-storyfolder-link"]
                e_chrono_:       [div, class='section-content-list']
                e_chroni_:       [span, class='sfTextMedium']
                e_tag_of_:       [div class="section-title", text==Official Tags]
                e_tag_uf_:       [div class="section-title", text==UnOfficial Tags]
                e_tag:           [a class='sf-tag',<text>]
                e_content_:      [div, id="sf-viewcontent-content"]
                e_content_txt:   [div, id="sfContentBody"]
                e_dscr:          [div, 'id=sfContentDescription']
                e_joined_:       [span, class="user-stats sfTextMedLight"]
                e_stats_:        [div, class='section-content']
                e_folders_:      [div, class="sfBrowseListFolders"]
                e_folder_link_:  [a, class='sfTextMedium']
                e_content_image_: [div, id="sfContentImage]
                e_titles_:        [span class='sf-browse-shortlist-title']


itch:
    url :
        dmn:
            d:
                hstns:    ['', www]
                hstn_var: null
                tlds:     [io]
            u:
                hstns:    []
                hstn_var: _usr_
                tlds:     [io]
        _usr:
            u_usr:        [u]
        _content:
            c_work:       [u, _work_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
                w:     
                - a_init
                - a_post, a_content
        actions: 
                a_init:
                        url :           [_url]
                        wkfl_vars:      [g_csrf_token]
                a_post:
                        url :           [_url, '/file/7456108?source=view_game&as_props=1&after_download_lightbox=true']
                        payload: 
                                csrf_token:   [g_csrf_token]
                a_content:
                        url :           [g_post_rsp_url]
                a_init_purchase:
                        url :           [_url, /purchase]
                        wkfl_vars:      [g_csrf_token]
                a_post_purchase:
                        url :           [_url, /download_url]
                        payload: 
                                csrf_token:   [g_csrf_token]
        elements:
                e_head_title:     [[head, title], [_text_]]
                e_dscr_raw:       [div,  class, formatted_description user_formatted]
                e_dls_class:      [div,  class, uploads]
                e_dl_class:       [div,  class, upload]
                e_dl_info_class:  [div,  class, info_column]
                e_dl_button:      [a,    class, button download_btn]
                e_comments:       [div,  class, game_comments_widget base_widget]
                e_csrf_token:     [meta, name,  csrf_token]
                e_view_more:      [a,    class, action_btn view_more]
                e_more_games:     [div,  class, game_grid_widget base_widget user_game_grid]
                e_other_game:     [a,    class, title game_link]
                e_dl_direct:      [a,    class, direct_download_btn]


furaffinity:
    url:
        dmn:
            d:
                hstns: [www,'']
                hstn_var:  null
                tlds:      [net]
        _user:
            u_user:       [d, user, _user_]
        _listings:
            l_work:       [d, gallery, _author_, _iter(iter-1)_, '\?']
            l_work2:       [d, gallery, _author_, _iter(iter-1)_]
        _content:
            c_work:       [d, view, _work_uid_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
        actions:
            a_login:
                url: https://www.furaffinity.net/login
                usr: name
                pwd: pass
                token: null
        elements:
            AUTHOR:          [e_author, {text}]
            AUTHOR_STATS:    [e_joined, [where, [strong>, {text}]]]
            TITLE:           [e_title, {text}]
            TAGS:            [[and, e_tag_of, e_tag_ef], [for, e_tag, {text}]]
            DSCR:            [e_content,e_dscr]
            PDF:             [s_pdf]
            TXT:             [e_content, e_txt, {text}]
            CHRONO:          [e_chrons, [for, e_chrono, where, [strong>, {text}]]]
            CHRONI:          [e_chrons, [for, e_chroni, where, [strong>, {text}]]]
            STATS:           [e_stat_header, e_stats, [by, line, ['[7:],views[:3],faves[:1],comments[:1],vote[:1]']]]
            IMAGE:           [in, s_art for, w_work, where, e_contentimage]
            FOLDER_IMAGE:    [in s_art, in, e_folders for, e_folder_link]
            TITLES:          [in, s_titles for, w_work, where, e_titles]
            FOLDER_TITLES:   [in, s_titles, in, e_folders for, e_folder_link]
            JOURNALS:        [in, s_journals, for w_work]
            e_info: [div.info]
            e_tag2: [div, class='section-ody info",[div,[strong],[span]]]
            e_tag:  [section, class='tags-mobile',[span,  class='tags', [a]]]
            e_tag2: [section, class="folders-moile",[div,[div,[a]]]]
            e_joined: [span, class="hideonmoile" >registered<]
            e_text:     [div, class="submission-content"]
            e_title:    [.submission-title]
            e_author:   [a]
            e_views:    [div, class='views']
            e_favs:     [div, class='favorites']
            e_comments: [div, class='comments']
            e_rating:   [div, class='rating']
            e_date: [.popup_date]
            e_stats: [div, class='table',[div, class='highlight']]
            e_titles: [figcaption, [p ,[a]]]


blokfort:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        _content:
            c_work:       [d, _work_]
        _listing:
            l_works:      [d, nsfw-comics]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            _w:
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
        elements:


catbox:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [moe]
            f:
                hstns: [files]
                hstn_var:  null
                tlds:      [moe]
        _bin:
            b_collection: [d, c, _collection_]
        _content:
            c_file:       [f, _file_._file_fxt_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
        elements: 


google:
    url:
        dmn:
            d:
                hstns: [www,'']
                hstn_var:  null
                tlds:      [com]
            f:
                hstns: [drive]
                hstn_var:  null
                tlds:      [com]
            w:
                hstns: [docs]
                hstn_var:  null
                tlds:      [com]
        _content:
            c_doc:        [w, document, d, _doc_]
            c_doc_edit:   [w, document, d, _doc_, edit]
            c_doc_pub:    [w, document, d, e, _doc_, pub]
            c_file:       [f, file, d, _file_]
            c_file_view:  [f, file, d, _file_, view]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: [a_init, a_content]
        actions:
            a_init:
            a_content:
        get:
        elements:


fiction:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [live]
        _user:
            u_user:       [d, user, _user_]
        _flash:
            f_flash:      [d, stories, _work_, _work_uid_]
        _content:
            c_part:       [d, stories, _work_, _work_uid_, _part_, _part_uid_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: [a_init, a_content]
        actions:
            a_init:
                url: [_url]
        elements:

ghostbin:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        path:
            p_folders:    [_folder_uid_]
        _content:
            c_work:      [d, p_folders, _work_uid_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
                w: [a_init, a_content]
        actions:
                a_init:
                        url: [_url]
        elements:


git:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [io]
        _content:
            work:      [d, _work_uid_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
                w: [a_init, a_content]
        actions:
                a_init:
                        url: [_url]
                a_content:
                        url: [IMAGES]
        get:
        elements:


hardbin:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        _content:
            work:          [d, ipfs, _work_uid_]
    fetch:
        params:
            enabled: False
            login:   False
        workflows:
                w: [a_init, a_content]
        actions:
                a_init:
                        url: [_url]
                a_content:
                        url: [IMAGES]
        get:
        elements:


literotica:
    url:
        dmn:
            d:
                hstns: [www,'']
                hstn_var:  null
                tlds:      [net,com]
        _content:
            c_page:      [d, s, _work_, {page: _page(iter-1)_}]
            c_page_none: [d, s, _work_]
        _listing:
            l_work:      [d, _usr_, works, stories, all]
        _usr:
            u_usr:      [d, users, _usr_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w:
            - a_init
            - a_content
        actions:
            a_login:
            a_content:
            a_init:
                url: [_url]
                do:
            a_content:
                url: [_url]
                do:
        elements:


mcstories:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        _content:
            c_work: [d, _work_, _work_._work_fxt_]
        _flash:
            f_work: [d, _work_, index.html]
        _listing:
            l_usr: [d, users, index.html]
        _usr:
            u_usr: [d, users, _usr_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content_txt
        actions:
            a_content:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:


mega:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [nz]
        path:
            p_folders: [folder,  _folder_uid_]
        _listing:
            l_work: [d, p_folders]
        _content:
            c_work: [d, p_folders, file, _work_uid_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_login:
            a_content:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:


pastebin:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        _content:
            c_work:       [d, _work_]
        _listing:
            l_work:       [d, u, _usr_]
        _usr:
            u_user:       [d, u, _usr_]
        _misc:
            m_login:      [d, login]
    fetch:
        params:
            enabled: True
            login: False
        workflows:
            w:
                - a_init
                #- a_content
        get:
            g_init :           [_bool, False]
            g_logged_in :      [_bool, False]
            g_csrf-param:      [e_csrf-param]
            g_csrf-param_name: [e__csrf-param_name]
        actions:
            a_init:
                url: [_url]
                do:
                - [e_w_dl, _exists]
                #- [e_content_txt, _exists]
            a_content:
                url: [_url]
                do:
                - [e_w_dl, _click(0)]
            a_login:
                payload:
                    LoginForm[username]: _usr
                    LoginForm[password]: _pwd
                    g_csrf-param_name: g_csrf-param
                do: 
                - [g_csrf-param_name, _get]
                - [g_csrf-param, _get]
                - [e_login_pwd, _type]
                - [e_login_usr, _type]
                - [e_login_btn_submit, _click]
                - [_set, g_logged_in, True]
        elements:
            e_w_dl:             [a, class=btn -small,txt=download]
            e_content_txt_area: [div, class=source text, [ol, class=text]]
            e_content_txt:      [_in, e_content_txt_area, [_for, li, txt]]

            e_login_usr:        [_css, "#loginform-username"]
            e_login_pwd:        [_css, "#loginform-password"]
            e_login_btn_submit: [button, type=submit, class=btn-big]

            e_csrf-param_name:  [meta, name=csrf-param, content]
            e_csrf-param:       [meta, name:=g_csrf-param, content]


pastefs:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        _content:
            c_work:       [d, pid, _work_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
                do:
            a_content:
                url: [_url]
                do:
        elements:


psstaudio:
    url:
        dmn:
            d:
                hstns:     ['',www]
                hstn_var:  null
                tlds:      [com]
            p:
                hstns:     [pastes]
                hstn_var:  null
                tlds:      [com]
        _content:
            c_work: [p, post, _work_uid_]
    fetch:
        params:
            enabled: False
            login: False
        
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
                do:
            a_content:
                url: [_url]
                do:
        elements:


poneb:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [in]
        _content:
            c_work: [d, _work_]
        _listing:
            l_work: [d, u, _usr_, user]
        _usr:
            u_usr: [d, u, _usr_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
                w: 
                - a_init
                - a_content
        actions:
                a_init:
                        url: [_url]
                        do:
                a_content:
                        url: [_url]
                        do:
        elements:


githubusercontent:
    url:
        dmn:
            d:
                hstns:     ['',www]
                hstn_var:  null
                tlds:      [com]
            f:
                hstns:     [raw]
                hstn_var:  null
                tlds:      [com]
        path:
            p_folders:     [_folders_]
        _bin:
            b_repo:        [f, _usr_, _repo_, _version_]
        _content:
            c_work:        [f, _usr_, _repo_, _version_, p_folders, _work_._work_fxt_]
            c_work2:        [f, _usr_, _repo_, _version_, p_folders, _work_]
        _usr:
            u_usr:         [f, _usr_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:


rentry:
    url:
        dmn:
            d:
                hstns: ['', www]
                hstn_var:  null
                tlds:      [org, co]
        _content:
            c_work: [d, _work_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:

snekguy:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [com]
        path:
            p_group:        [_group_]
        _content:
            c_work:         [d, stories, p_group, _work_]
            c_work_edition: [d, stories, p_group, _work_, _edition_]
        _listing:
            l_work:         [d, stories]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:


snootgame:
    url:
        dmn:
            d:
                hstns: ['',www]
                hstn_var:  null
                tlds:      [xyz]
        _content:
            c_work:       [d, en, bin, _work_uid_.zip]
        _flash:
            f_flash:      [d]
        _listing:
            l_downloads:  [d, en, download.html]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w:
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:


fanfiction:
    url:
        dmn:
            d:
                hstns: [www,'']
                hstn_var:  null
                tlds:      [net]
        _content:
            c_part:       [d, s, _work_uid_, _part_, _work_]
        _usr:
            u_user:       [d, u, _user_uid_, _user_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
            a_content:
                url: [_url]
        elements:


reddit:
    url:
        dmn:
            d:
                hstns: [www,'']
                hstn_var:  null
                tlds:      [com]
        _bin:
            b_sub:        [d, r, _sub_]
        _content:
            c_work:       [d, r, _sub_, comments, _work_uid_, _work_]
        _usr:
            u_user:       [d, user, _user_]
    fetch:
        params:
            enabled: False
            login: False
        workflows:
            _w: 
            - a_init
            - a_content
        actions:
            a_init:
                url: [_url]
                do:
            a_content:
                url: [_url]
                do:
        elements:


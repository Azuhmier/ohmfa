archiveofourown.org:
  cookies :        [__cf_bm, _cfuvid, _otwarchive_session, cf_clearance]
  _purl:
    bin:
      _series:     [series, _series_uid_]
    content:
      _part:       [works, _work_uid_, chapters, _part_uid_,'?show_comments=',_show_comments_]
      _work:       [works, _work_uid_, '?show_comments=',_show_comments_,]
    splash:
      _series:     [u_user, series, '?page=', _iter_]
      _work:       [u_user, works, '?page=', _iter_]
    user:
      _user:       [user, _user_]
      _user_alias: [user, _user_, pseuds, _alias_]
  _wkfl_vars:
    PWD:           [e_pwd, name]
    USR:           [e_usr, name]
    TOKEN_VALUE:   [e_token, value]
    TOKEN_NAME:    [e_token, name]
  _workflows:
    _w :           [a_login, a_content]
  _actions:
    a_login:
      url :        https://archiveofourown.org/users/login
      wkfl_vars :  [TOKEN_NAME, TOKEN_VALUE, PWD, USR]
      payload: 
        usr:       USR
        pwd:       USR
        TOKEN_NAME: TOKEN_VALUE
    a_unhide_comments:
    a_content:
        do :
        - [ click, e_tos_agree_clk, 5, 0]
        - [ click, e_accept_tos_clk, 1, 0]
        - [ click, e_accept_NSFW_clk, 1, 0]
        - [ click, e_accept_full_work_clk, 1, 0]
  _elements:
    e_accept_NSFW_clk:        [t_css, '#main > ul > li:nth-child(1) > a']
    e_accept_full_work_clk:   [t_css, '#main > div.work > ul > li.chapter.entire > a']
    e_accept_tos_clk:         [t_css, '#accept_tos']
    e_tos_agree_clk:          [t_css, '#tos_agree']
    e_accept_tos :            [p,     class='submit']
    e_tos_agree :             [input, id='tos_agree']
    e_pwd:                    [input, id='user_password']
    e_usr:                    [input, id='user_login']
    e_token:                  [input, name='authenticity_token']
    e_body_logged_out:        [body,  class='logged-out javascript']
    e_tos_prompt:             [div,   id='tos_prompt']
    e_wrapper:                [div,   class='wrapper']
      ev_tags:                [dd,    class=".+tags",                   [ul, _for, [li, [a, .txt]]]]
      ev_stats:               [dd,    class"stats",                     [dl, _for, [_hash, [dt, .txt], [dd, [_exists, a, .txt]]]]]
    e_preface:                [div,   class='preface_group']
      ev_author:              [h3,    class='byline heading',           [a,.txt]]
      ev_title:               [h2,    class='title heading',            .txt]
      e_dscp:                 [div,   class="summary module",           [blockquote, .txt]]
    e_workskin:               [div,   id='workskin']
      e_chapters:             [div,   id="chapters", role='article']
        e_chapter:            [div,   class="chapter"]
          e_chapter_preface:  [div,   class="chapter preface group"]
                    e_chroni: [h3,                                      [a, .txt]]
            e_chrono:         [h3,                                      [_not, a, .txt,'2:']]
          ev_txt:             [div,   class="userstuff module",         [h3, id="work",.txt]]
    e_splash_titles:          [ol,    class="work index group"]
      e_splash_serie:         [li,                                      [div, [h4, [a, .href]]]]
      ev_splash_title_tags:   [ul,    class="tags comma",               _for, [li, [a, .txt]]]
    e_splash_series:          [ul,    class="series index group"]
      e_splash_series:        [li,                                      [div, [h4, [a, .href]]]]
      ev_splash_series_tags:  [ul,    class="tags comma",               _for, [li, [a, .txt]]]
    e_author_wrapper:         [div,   class="wrapper",                  _for, [_hash, [dt,.txt], [dd, [_exists, a, .txt]]]]
      e_bio:                  [div,   class='bio module',               [blockquote, .txt]]

blokfort.com:
  purl:
    content:
      _work:      [_work_]
    splash:
      _works:     [nsfw-comics]
  _workflows:
    _w:           [_init, _content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
    IMAGES: [e_images, [for, _CONTENT_, r<pdf>]]
  _elements:
    _AUTHOR_:         'Blokfort'
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []
    e_images:         []


files.catbox.moe:
  purl:
    content:
      _work: [files, ._domain_, _work_uid_, ._fext_]
  _workflows:
    _w: [a_content]
  _actions:
    a_content:
      url: [_url]
  _wkfl_vars: null
  _elements: 
    _CONTENT_: []

catbox.moe:
  purl:
    content:
      _work:       [c, _work_uid_]
  _workflows:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
    IMAGES: [e_images, [for, _CONTENT_, r<pdf>]]
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []
    e_images:         []


docs.google.com:
  purl:
    content:
      _work:      [document, d, _work_uid_]
      _work_edit: [document, d, _work_uid_, edit]
      _work_pub:  [document, d, e, _work_uid_, pub]
  _workflows:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _CONTENT_:        []


drive.google.com:
  purl:
    content:
      _work:      [file, d, _work_uid_]
      _work_view: [file, d, _work_uid_, view]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


fiction.live:
  purl:
    content:
      _part:      [stories, _work_, _work_uid_, _part_, _part_uid_]
    flash:
      _flash:     [stories, _work_, _work_uid_]
    user:
      _user:      [user, _user_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


ghostbin.com:
  purl:
    content:
      _work:      [p_folder, _work_uid_]
      _work_nofd: [_work_uid_]
    path:
      _folder:    [_folder_uid_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


git.io:
  purl:
    content:
      _work:      [_work_uid_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


hardbin.com:
  purl:
    content:
      _work:          [ipfs, _work_uid_]
  _workflows:
    _w:
    _w: [a_init, a_content]
  _actions:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


itch.io:
  cookies:            [allow_nsfw_games, itchio_refs, itchio_token, ref%3aregister%3areferrer]
  _purl :
      content:
        _work:        [u_user, _work_uid_]
      user:
        _user:        [_user_, ._domain_]
  _workflows:
    w_:               [a_init, a_post, a_content]
    w_purchase:       [a_init_purchase, a_post_purchase, a_post, a_content]
  _actions: 
    a_init:
      url :           [_url]
      wkfl_vars:      [g_csrf_token]
    a_post:
      url :           [_url, /file/7456108?source=view_game&as_props=1&after_download_lightbox=true]
      payload: 
        csrf_token:   [g_csrf_token]
    a_content:
      url :           [g_post_rsp_url]
    a_init_purchase:
      url :           [_url, /purchase]
      wkfl_vars:      [g_csrf_token]
    a_post_purchase:
      url :           [_url, /download_url]
      payload: 
        csrf_token:   [g_csrf_token]
  _wkfl_vars:
    _AUTHOR_:         [e_head_title,        [_text_], [till, by]]
    _TITLE_:          [e_head_title,        [_text_], [after, by] ] 
    _DSCR_:           [e_dscr_raw,          [1, p]]
    _CONTENT_:        []
    g_other_titles:   [e_view_more,         hreff]
    g_to_other_title: [e_other_game,        hreff]
    g_other_title:    [e_other_game,        _text_]
    g_csrf_token:     [e_csrf_token,        name]
    g_post_rsp_url:   [a_download_post_,    url]
    g_is_success:     [a_download_post_,    name]
  _elements:
    e_head_title:     [[head, title], [_text_]]
    e_dscr_raw:       [div,  class, formatted_description user_formatted]
    e_dls_class:      [div,  class, uploads]
    e_dl_class:       [div,  class, upload]
    e_dl_info_class:  [div,  class, info_column]
    e_dl_button:      [a,    class, button download_btn]
    e_comments:       [div,  class, game_comments_widget base_widget]
    e_csrf_token:     [meta, name,  csrf_token]
    e_view_more:      [a,    class, action_btn view_more]
    e_more_games:     [div,  class, game_grid_widget base_widget user_game_grid]
    e_other_game:     [a,    class, title game_link]
    e_dl_direct:      [a,    class, direct_download_btn]


literotica:
  _purl:
    content:
      _page: [s, _work_, ?page=, page_]
      _page_none: [s, _work_]
    splash:
      _work: [_user_, works, stories, all]
    user:
      _user: [users, _user_]
  _workflows:
    w_:
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


mcstories.com:
  _purl:
    content:
      _work: [_work_, _work_, ._fext_]
    flash:
      _work: [_work_, index, .html]
    splash:
      _user: [users, index, .html]
    user:
      _user: [users, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


mega.nz:
  _purl:
    bin:
      _work: [p_folders]
    content:
      _work: [p_folders, file, _work_uid_]
    path:
      _folders: [folder, _folder_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


pastebin.com:
  _purl:
    content:
      _work: [_work_uid_]
    splash:
      _work: [u_user]
    user:
      _user: [u, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


pastefs.com:
  _purl:
    content:
      _work: [pid, _work_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


pastes.psstaudio.com:
  _purl:
    content:
      _work: [post, _work_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


poneb.in:
  _purl:
    content:
      _work: [_work_uid_]
    splash:
      _work: [u_user]
    user:
      _user: [u, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


raw.githubusercontent.com:
  _purl:
    bin:
      _repo: [_user_, _repo_, _version_]
    content:
      work: [b_repo, p_folders, _work_uid_]
      work_nofolers: [b_repo, _work_uid_]
    path:
      _folders: [_folders_]
    user:
      _user: [_user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


rentry:
  _purl:
    content:
      _work: [_work_uid_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


snekguy.com:
  _author_: snekguy
  _purl:
    content:
      _work: [stories, p_group, _work_]
      _work_edition: [stories, p_group, _work_, _edition_]
    path:
      _group: [_group_]
    splash:
      _work: [stories]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


snootgame.xyz:
  _purl:
    content:
      _work: [en, bin, _work_uid_, .zip]
    flash:
      _flash: []
    splash:
      _downloads: [en, download, .html]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


www.fanfiction.net:
  _purl:
    content:
      _part: [s, _work_uid_, _part_, _work_]
    user:
      _user: [u, _user_uid_, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _DSCR_:           []
    _CONTENT_:        []


www.furaffinity.net:
  _purl:
    content:
      _work: [view, _work_uid_]
    splash:
      _work: [gallery, _author_, iter_, \?]
    user:
      _user: [user, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
      url: https://www.furaffinity.net/login
      usr: name
      pwd: pass
      token: null
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
    AUTHOR:          [e_author, {text}]
    AUTHOR_STATS:    [e_joined, [where, [strong>, {text}]]]
    TITLE:           [e_title, {text}]
    TAGS:            [[and, e_tag_of, e_tag_ef], [for, e_tag, {text}]]
    DSCR:            [e_content,e_dscr]
    PDF:             [s_pdf]
    TXT:             [e_content, e_txt, {text}]
    CHRONO:          [e_chrons, [for, e_chrono, where, [strong>, {text}]]]
    CHRONI:          [e_chrons, [for, e_chroni, where, [strong>, {text}]]]
    STATS:           [e_stat_header, e_stats, [by, line, [[7:],views[:3],faves[:1],comments[:1],vote[:1]]]]
    IMAGE:           [in, s_art for, w_work, where, e_contentimage]
    FOLDER_IMAGE:    [in s_art, in, e_folders for, e_folder_link]
    TITLES:          [in, s_titles for, w_work, where, e_titles]
    FOLDER_TITLES:   [in, s_titles, in, e_folders for, e_folder_link]
    JOURNALS:        [in, s_journals, for w_work]
  _elements:

    e_info: [div.info]
    e_tag2: [div, class='section-ody info",[div,[strong],[span]]]
    e_tag: [section, class='tags-mobile',[span,  class='tags' [a]]]

    [section, class="folders-moile"[div[div[a]]]]

    e_joined: [span, class="hideonmoile" >registered<]
    e_text:     [div, class="submission-content"]
    e_title:    [.submission-title]
    e_author:   [a]
    e_views:    [div, class='views']
    e_favs:     [div, class='favorites']
    e_comments: [div, class='comments']
    e_rating:   [div, class='rating']
    e_date: [.popup_date]
    e_stats: [div, class='table',[div, class='highlight']]
    views subs cmts faves comments earned comments made journals
    e_titles: [figcaption [p [a]]]

https://d.furaffinity.net/art/azuhmier/stories/1571677337/1571677337.azuhmier_the_search_for_hmofa.txt
www.reddit.com:
  _purl:
    bin:
      _sub:  [r, _sub_]
    content:
      _work: [b_sub, comments, _work_uid_, _work_]
    user:
      _user: [user, _user_]
  _workflows:
    w_:
    _w: [a_init, a_content]
  _actions:
    a_login:
    a_content:
    a_init:
      url: [_url]
    a_content:
      url: [IMAGES]
  _wkfl_vars:
  _elements:
    _AUTHOR_:         []
    _TITLE_:          [] 
    _CONTENT_:        []


www.sofurry.com:
  _purl:
    user:
      _user:           [_user_, ._domain_]
    content:
      _work:           [view, _work_uid_]
    bins:
      _story_folder:   [browse, folder, stories, ?by=_user_uid_, ?folder=_story_folder_uid_]
      _art_folder:     [browse, folder, art, ?by=_user_uid_, ?folder=_art_folder_uid_]
    splash: 
      _stories:        [browse, user, stories, ?uid=, _user_uid_, ?stories-page=, _iter_]
      _journals:       [u_user, user, journals]
      _art:            [u_user, user, artwork]
    misc: 
      _icon:           [std, avatar, ?user=, _user_id_, &character=, _character_, level=, _level_]
      _login:          [user, login]
      _pdf:            [export,ePub,?id=,_work_id_]
  _triggers:
  _workflows:
    w_:      [a_login, a_init, a_html]
    w_crawl: [a_login, a_init, a_compute]
  _actions:
    a_login:
      url: m_login
      pwd: LoginForm[sfLoginPassword]
      usr: LoginForm[sfLoginUsername]
      token: null
    a_init:
      url: [_url]
    a_html:
      url: null
    a_compute:
      url: null
  _wkfl_vars:
    AUTHOR:          [e_author, {text}]
    AUTHOR_STATS:    [e_joined, [where, [strong>, {text}]]]
    TITLE:           [e_title, {text}]
    TAGS:            [[and, e_tag_of, e_tag_ef], [for, e_tag, {text}]]
    DSCR:            [e_content,e_dscr]
    PDF:             [s_pdf]
    TXT:             [e_content, e_txt, {text}]
    CHRONO:          [e_chrons, [for, e_chrono, where, [strong>, {text}]]]
    CHRONI:          [e_chrons, [for, e_chroni, where, [strong>, {text}]]]
    STATS:           [e_stat_header, e_stats, [by, line, [[7:],views[:3],faves[:1],comments[:1],vote[:1]]]]
    IMAGE:           [in, s_art for, w_work, where, e_contentimage]
    FOLDER_IMAGE:    [in s_art, in, e_folders for, e_folder_link]
    TITLES:          [in, s_titles for, w_work, where, e_titles]
    FOLDER_TITLES:   [in, s_titles, in, e_folders for, e_folder_link]
    JOURNALS:        [in, s_journals, for w_work]

  _elements:
    e_author:        [span, class="sf-username sfTextMedium"]
    e_title:         [span, id='sfContentTitle', itemprop='name'] 

    e_chrons:        [div, class="section sf-storyfolder-link"]
    e_chrono_:       [div, class='section-content-list']
    e_chroni_:       [span, class='sfTextMedium']

    e_tag_of_:       [div class="section-title", {text}==Official Tags]
    e_tag_uf_:       [div class="section-title", {text}==UnOfficial Tags]
    e_tag:           [a class='sf-tag',<text>]

    e_content_:      [div, id="sf-viewcontent-content"]
    e_content_txt:   [div, id="sfContentBody"]
    e_dscr:          [div, 'id=sfContentDescription']


    e_joined_:       [span, class="user-stats sfTextMedLight"]

    e_stats_header_: [div, class='section-title', {text}==Stats]
    e_stats_:        [div, class='section-content']

    e_folders_:      [div, class="sfBrowseListFolders"]
    e_folder_link_:  [a, class='sfTextMedium']

    e_content_image_: [div, id="sfContentImage]
    e_titles_:        [span class='sf-browse-shortlist-title']
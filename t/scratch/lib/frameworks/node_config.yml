tatu:
    op:
    op_author:
    op_title:
    op_part:
    op_url:

atu:
    author:
    section:
    general:
    series:
    title:
    part:
    tag:
    dscp:
    url:

fetch:
    uvar:
        superclass: attr
        class: dict
        subclass: stat
        parents: [work_bin, work, work_part] 
        table: None
        init: 
        - [published, _type(datetime)]
        - [faves, _type(int)]
        - [likes, _type(int)]
        - [updated, _type(datetime)]
        - [views, _type(int)]
        - [completed, _type(bool)]
    svar:
        superclass: attr
        class: dict
        subclass: stat
        parents: [work_bin, work, work_part] 
        table: None
        init: 
        - [published, _type(datetime)]
        - [faves, _type(int)]
        - [likes, _type(int)]
        - [updated, _type(datetime)]
        - [views, _type(int)]
        - [completed, _type(bool)]
    fvar:
        superclass: attr
        class: dict
        subclass: stat
        parents: [work_bin, work, work_part] 
        table: None
        init: 
        - [published, _type(datetime)]
        - [faves, _type(int)]
        - [likes, _type(int)]
        - [updated, _type(datetime)]
        - [views, _type(int)]
        - [completed, _type(bool)]

scrape:
    url:
        superclass: node
        parents: [root]
        table: [root,0]
        init: 
        - [_type(str)]
    page:
    src:
    content:
    redirects:

uwu:
    #Nodes
    site:
        superclass: node
        parents: [root]
        table: [root,0]
        init: 
        - [_type(str)]
    user:
        superclass: node
        class: owner
        parents: [site]
        table: [site,0]
        init: 
        - [_type(str)]
    bin:
        superclass: node
        class: bin
        parents: [user]
        table: [site,0]
        init:
        - [_type(str)]
    work:
        superclass: node
        class: thing
        parents: [work_bin] 
        table: [site,0]
        init:
        - [_type(str)]
    part:
        superclass: node
        class: part
        parents: [work]
        table: [site,0]
        init:
        - [_type(str)]
    url: url
    # properties
    work_idx:
        superclass: prop
        class: idx
        parents: [work]
        table: [work_bin,0]
        init:
        - [_type(str)]
    work_part_idx:
        superclass: prop
        class: idx
        class: use
        parents: [work_part]
        table: [work, 0]
        init:
        - [_type(str)]
    name:
        superclass: prop
        subclass: name
        parents: [site,user,work_bin,work,work_part]
        table: [-1,0]
        init:
        - [_type(str)]
    dscp:
        superclass: prop
        class: dscp
        parents: [work_bin,work,work_part] 
        table: [-1,0]
        int:
        - [_type(str)]
    group:
        superclass: prop
        class: scalar
        subclass: group
        parents: [tag]
        table: [tag,i]
        init:
        - [_type(str)]

    # attributes
    tag:
        superclass: attr
        class: scalar
        class: tag
        parents: [work_bin,work,work_part]
        table: [site,0]
        init:
        - [_type(str)]
    stat:
        superclass: attr
        class: dict
        subclass: stat
        parents: [work_bin, work, work_part] 
        table: None
        init: 
        - [published, _type(datetime)]
        - [faves, _type(int)]
        - [likes, _type(int)]
        - [updated, _type(datetime)]
        - [views, _type(int)]
        - [completed, _type(bool)]
    user_stat:
        superclass: attr
        class: dict
        subclass: stat
        parents: [user] 
        table: None
        init:
        - [ joined, _type(datetime)]
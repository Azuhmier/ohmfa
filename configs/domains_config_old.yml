archiveofourown:
    redirect: False
    params:
        login:   False
        init:    False
        content: False
        crawl:   False
    dmns:
        d:
            hstns:               ['', www]
            hstn_var:            null
            tlds:                [org]
    site_defs:
        chapter: part
        psued:   alias
    nodes:
        site:
            urls:
                site:
                    bp_cnfg: [d, users, login]
                    elements: {}
                    payload: 
                        user[login]: _usr_ 
                        user[password]: _pwd_
                        user[remeber_me]: 0 
                        commit: "Log+in" 
                        authenticity_token: g_token_value
                login:
                    bp_cnfg: [d, users, login]
                    elements: {}
                    payload: 
                        user[login]: _usr_ 
                        user[password]: _pwd_
                        user[remeber_me]: 0 
                        commit: "Log+in" 
                        authenticity_token: g_token_value
        user:
            urls:
                user:
                    node: True
                    bp_cnfg: [users, _val(name)_, _try(pseuds;_psued()_|1|0)]
                    query: {}
                    domain_type: d
                    alt_bp_cnfgs: {}
                    actions: 
                        init:
                            do:
                            - [ a_init]
                        content:
                            do:
                            - []
                        crawl:
                            - profile
                            - series_listing
                            - work_listing
                    elements: {}
                profile:
                    node: False
                    bp_cnfg: [users, _val(name)_, profile]
                    query: {}
                    domain_type: d
                    alt_bp_cnfgs: {}
                    actions:
                        init:
                            do:
                            - [ a_init]
                        content:
                            do:
                            - []
                        crawl: null
                    elements: 
                        e_pseudes: [_css(".meta"),      [_css("dd.pseuds"),       [_for(), a,                        _db(pseuds)_       =text]]]
                        e_joined:  [_css(".meta"),      [_css("dd:nth-child(4)"),                                    _db(stat|joined)_  =text]]
                        e_uid:     [_css(".meta"),      [_css("dd:nth-child(6)"),                                    _db(;uid)_         =text]]
                        e_works:   [_css("#dashboard"), [_css("ul.navigation"),   [        _css("nth-child(1)"),[a, _db(stat|works)_    =text)]]]]
                        e_series:  [_css("#dashboard"), [_css("ul.navigation"),   [        _css("nth-child(1)"),[a, _db(stat|series)_   =text)]]]]
                        e_faves:   [_css("#dashboard"), [_css("ul.navigation"),   [        _css("nth-child(1)"),[a, _db(stat|faves)_    =text)]]]]
                work_listing:
                    bps:
                    - 
                        bp: [users, _db(;name)_, _try(pseuds;_psued()_|1|0), works]
                        domain_type: d
                        main: true
                        query:
                            page: _db(page;;1)_
                        frags: {}
                    formats: {}
                    regex: {}
                        title: “^Works - [^,-]+ - \[Archive of Our Own\]$”
                    actions: 
                        checks:
                            title:
                            - [ _in(ea_head), title, text==_regex(title) ]   
                            - true 
                        data:
                            self:
                                prsv: null
                                area: {}
                                data:
                                    NAME: [ _css(“h2.heading”), db(;name)=text, _sfind(“by “;>) ]
                                    WORK:
                                        prsv: "|work"
                                        area:
                                            listing: [ _css(“ol.work.index.group”), [ _for(),li ]]
                                            listing_head: [ _in(listing), _css(”h4.heading”) ]
                                        data:
                                            uid:  [ _in(listing_head), _for(0), a, _db(|w)=href, _upath(-1) ]
                                            name: [ _in(listing_head), _for(0), a, _db(|w;name)=text ]
                                            dscp: [ _css(“bockquote.userstuff.summary”), _db(|work|dscp)=text, _format(dscp) ]
                                            stats:
                                                prsv: "|stats"
                                                area: {}
                                                data:
                                                    most:
                                                        ref:  "work.work.stats"
                                                        filter: [_not(), published, updated]
                                                        subs: null
                                                    published:    [ _css(“p.datetime”), _db(|work|stats:published)=text, _format(datetime,”dd mmm yyyy”) ]
                                                    complete: [ _css(“ul.required-tags”), [ _for(-1),  span, class!=”text”, _db(|w|stats:complete)=class, _wfind(“-“;>,1), _format(bool,”yes”,”no”) ]]
                                            tag:
                                                prsv: null
                                                area: {}
                                                data:
                                                    TAG_LANG:
                                                        ref: work.work.tag.tag.tag_lang 
                                                        filter: null
                                                        subs: null
                                                    tag:          [ _css(ul.tags.commas), [ _for(), dd, class==_substr(“tags”), _db(work|*tag|group)=class, _sfind(“ tags”,<), [ _for(), a, class==”tag”, _db(work|tag)=text, _format(tag) ]]]
                                                    tag_fandom:   [ _css(“h5.fandom.heading”), [ _for(),  a, _db(|work|*tag|group)=”fandom”, _db(|work|tag)=text ]]
                                                    tag_req:      [ _css(“ul.required-tags”), [ _for(:-1), span, class!=”text”, _db(|w|*t|g)=class, _sfind(“-“;<,1), [ span, _db(|w|@t)_=text, _split(“,”,def) ]]]
                                            USER:
                                                prsv: "@user"
                                                area: {}
                                                data:
                                                    uid:   [ _in(listing), _db(|work|@user)=class, _wfind(“user-“,>) ]
                                                    name:  [ _in(listing_head), _for(1:), a, _db(|work|user;name)=href, _upath(1) ]
                                                    alias: [ _in(listing_head), _for(1:), a, _db(|work|user;%alias)=text, ifind(“(“,”)”), _else(), _dbcv(|work|user;name) ]
                                            bin:
                                                prsv: "|work|bin"
                                                area:
                                                    series: [ _css(“ul.series”), [ _for(), li ]]
                                                data:
                                                    uid:  [ _in(series), a, _db(|work|bin)=href, _upath(-1) ]
                                                    name: [ _in(series), a, _db(|work|bin;name)=text ]
                                                    idx:  [ _in(series), strong, _db(|work;idx)=text ]
                                                    user:
                                                        ref: work.work.bin.user
                                                        filter: null
                                                        subs: null
                        content:
                        crawl:
                series_listing:
                    bps:
                        -
                            bp_cnfg: [users, _name()_, _try(pseuds;_psued()_|1|0), series]
                            domain_type: d
                            main: true
                            query:
                                page: _val(page;;1)_
                            frags: {}
                    formats: {}
                    regex:
                        title: "^(?:[^,-]+,? )+– Works \[Archive of Our Own\]$"
                    actions: 
                        checks:
                            title:
                                - [_in(ea_head), title, text==_regex(title)]
                                - TRUE 
                        data:
                            self:
                                prsv: null
                                area: {}
                                data:
                                    name: [_css(“h2.heading”), db(;name)=text,_sfind(“by “,>)]
                                    bin:
                                        prsv: "|bin"
                                        area:
                                            listing: [_css(“ul.seriew.index.group”), [_for(), li]]
                                            listing_head: 
                                                ref: user.work_listing.work.area.listing.head
                                                fitler: []
                                                subs: []
                                        data:
                                            uid:
                                                ref: user.work_listing.work.uid(work=bin)
                                                fitler: []
                                                subs:
                                                    - [work,bin]
                                            name:
                                                ref: user.work_listing.work.name(work=bin)
                                                filter: []
                                                subs:
                                                    - [work,bin]
                                            stats: 
                                                ref: user.work_list.work.stats[bookmarks,words,complete,published](work=bin)
                                                filter: [bookmarks, words, complete, published]
                                                subs:
                                                    - [work,bin]
                                            tag:
                                                ref: user.work_listing.work.tag(work=bin)
                                                filter: []
                                                subs:
                                                    - [work,bin]
                                            dscp:
                                                ref: user.work_listing.work.dscp(work=bin)
                                                filter: []
                                                subs:
                                                    - [work,bin]
                                            user: 
                                                ref: user.work_listing.work.user(work=bin)
                                                filter: []
                                                subs:
                                                    - [work,bin]


                        content:
                        crawl:
                    elements: 
                        e_listing: [ul, class=series index group, [_for(|series), li]]
            bin:
                urls:
                    bin:
                        bps:
                            -
                                bp: [series, _val()_]
                                main: True
                                domain_type: d
                                query:
                                    page: _val(page;;1)_
                                frags: {}
                        formats: {}
                        regex:
                            title: “^[^,-]+- (?:[^,-]+,? )+- (?:[^,-]+,? )+\[Archive of Our Own\]$”
                        actions:
                            check:
                                title:
                                    - [_in(ea_head), title, text==_regex(“”)]
                                    - true
                                series:
                                    - [_css(“dl.series.meta.group”)]
                                    - true
                            data:
                            self:
                                prsv: null
                                area: {}
                                data:
                                    NAME: [_css(“h2.heading”), db(;name)=text]]
                                    STATS:
                                        prsv: "|stats"
                                        area: null
                                        data:
                                            most: 
                                                ref: USER.WORK_LIST.WORK.STATS
                                                filter: [bookmarks, workds, complete]
                                                subs: 
                                                    - [work,bin]
                                            PUBLISHED: [_css(“dl.series.meta.group”),[_for(1), dd, _db(|stat:published)=text, _format(datetime,(yyyy-mm,dd”)]]
                                            UPDATED: [_css(“dl.series.meta.group”),[_for(2), dd, _db(|stat:updated)=text, _format(datetime,(yyyy-mm,dd”)]]
                                    USER:
                                        prsv: null
                                        area: {}
                                        data:
                                            NAME: [_css(“dl.series.meta.group”),[_for(0), dd, [_for(), a _db(|user;name)=href, _upath(1)]]]
                                            ALIAS: [_css(“dl.series.meta.group”),[_for(0), dd, [_for(), a _db(|user;%alias)=href, _upath(-1)]]]
                                    WORK:
                                        prsv: "|work"
                                        AREA:
                                            Listing: [_css(“ul.series.work.index.group”), [_for(), li]]
                                            Listing_head:
                                                ref: USER.WORK_LISTING.WORK.AREA.LISTING.HEAD
                                                filter: []
                                                subs: []
                                        data:

                                    UID: 
                                        ref: USER.WORK_LISTING.WORK.UID
                                        filter: []
                                        subs: []
                                    NAME:
                                        ref: USER.WORK_LISTING.WORK.NAME
                                        filter: []
                                        subs: []
                                    STATS: 
                                        ref: USER.WORK_LISTING.WORK.STATS
                                        filter: []
                                        subs: []
                                    DSCP:
                                        ref: USER.WORK_LISTING.WORK.DSCP
                                        filter: []
                                        subs: []
                                    TAG :
                                        ref: USER.WORK_LISTING.WORK.TAG
                                        filter: []
                                        subs: []
                                    USER :
                                        ref: USER.WORK_LISTING.WORK.USER
                                        filter: []
                                        subs: []
                                    BIN:
                                        ref: USER.WORK_LISTING.WORK.BIN
                                        filter: []
                                        subs: []

                            content:
                            crawl:
                        elements: 
                            e_user:                   [_css("dl.series > dd:nth-child(2)"),             [_for(), a, _db(|user;name)_     =hreff, _upath(1)]]
                            e_stat_created:           [_css("dl.series > dd:nth-child(4)"),                         _db(|stat:created)_  =text]
                            e_stat_updated:           [_css("dl.series > dd:nth-child(6)"),                         _db(|stat:updated)_  =text]
                            e_stat_words:             [_css("dd.words"),                                            _db(|stat:words)_    =text]
                            e_stat_works:             [_css("dd.works"),                                            _db(|stat:works)_    =text]
                            e_stat_complete:          [_css("dl.stats:nth-child(1) > dd:nth-child(6)"),             _db(|stat:complete)_ =text]
                            e_stat_faves:             [_css("dd.bookmarks"),                                        _db(|stat:faves)_    =text]
                            e_listing:                [ul, class==series work index group, [_for(|work), li]]
        work:
            urls:
                work:
                    bps:
                    - 
                        bp: [works, _db()]
                        domain_type: d
                        main: True
                        query: 
                            show_comments: true
                            view_adult: true
                            view_full_work: true
                        frags: {}
                    formats:
                        dscp:
                    regex:
                        title: "^[^,-]+- (?:[^,-]+,? )+- (?:[^,-]+,? )+\[Archive of Our Own\]$"
                    actions:
                        checks:
                            title: 
                            - [ _in(ea_head), title, text==_regex(title) ]
                            - true
                            not_series:
                            - [ _css(“dl.series.meta.group”) ]
                            - false
                        data:
                            self:
                                params:
                                    prsv: null
                                    area: {}
                                data:
                                    uid:  [ _css(“li.chapter.bychapter”), [ a, _db()=href, _upath(1) ]]
                                    name: [ _css(“h2.title.heading”), _db(;name)=text ]
                                    dscp: [ _css(“div.summary.module”), [ blockquote, _db(;dscp)=text, _format(dscp) ]]
                                    stats:
                                        params:
                                            prsv: "|stats"
                                        data:
                                            published: [ _css(“dd.published”), _db(;stat:published)=text, _format(datetime|”yyyy-mm-dd”) ]
                                            updated:   [ _css(“dd.updated”), _db(;stat:updated)=text, _format(datetime|”yyyy-mm-dd”) ]
                                            words:     [ _css(“dd.words”), _db(;stat:words)=text, _format(int|”,”) ]
                                            faves:     [ _css(“dd.bookmarks”), _db(;stat:faves)=text, _format(int|”,”) ]
                                            likes:     [ _css(“dd.kudos”), _db(;stat:likes)=text, _format(int|”,”) ]
                                            views:     [ _css(“dd.hits”) , _db(;stat:faves)=text, _format(int|”,”) ]
                                            comments:  [ _css(”dd.comments”) , _db(;stat:faves)=text, _format(int|”,”) ]
                                            complete:  [ _css(“dd.chapters”), _db(;stat:completed)=text, _esplit(“/”;0;1) ]
                                    tag:
                                        params:
                                            prsv: null
                                        data:
                                            tag:      [ _css(dl.work.meta.group), [ _for(), dd, class==_substr(“tags”), _db(|*tag|group)=class, _sfind(“ tags”,<), [ _for(), a, class==”tag”, _db(|tag)=text, _format(tag) ]]]
                                            tag_lang: [ _prsv(|tag), _css(“dd.language”), _db(|tag;alias)=lang, _db(|tag)=text]
                                    user:
                                        params:
                                            prsv: null
                                        data:
                                            name: [ _css(“h3.byline”), [ _for(), a, _db(|user;name)=href, _upath(1) ]] 
                                    bin: 
                                        params:
                                            prsv: "|bin"
                                        area:
                                            series: [ _css(“dd.series”), [ _for(), span ]]
                                        data:
                                            uid:  [ _in(series), _css(“span.position”), [ a, _db(|bin)=href, _upath(-1), _db(|bin;name)=text ]]
                                            name: [ _in(series), _css(“span.position”), [ a,_db(|bin;name)=text ]]
                                            idx:  [ _in(series), _css(“span.position”), _db(;idx)=nrtext, _ifind("Part ";" of") ]
                                    user: 
                                        params:
                                            prsv: "|bin"
                                        area: {}
                                        data:
                                            name: [_eval(), _db(|bin|@user)=_dbc(|@user)]
                                    part:
                                        prsv: "|part"
                                        area:
                                            chapters: [ _css(“div#chapters”), [ _for(), div, class==”chapter”]]
                                        data:
                                            uid: [ _in(chapters), _css(“h3.title”), [ a, _db(|part)=href, _upath(-1) ]]
                                            val: [ _in(chapters), _css(“h3.title”), _db(|part;name)=nrtext, _sfind(“: “, >) ]
                                            idx: [ _in(chapters), _css(“h3.title”), [ a, _db(|part;idx)=text, _sfind(“Chapter “;>) ]]
                                        user:
                                            prsv: "|part|@user"
                                            area: {}
                                            data:
                                                name:  [ _css(“h4.heading.byline), [ _for(), a, _db(|part|user;name)=href, _upath(1) ]]
                                                alias: [ _css(“h4.heading.byline), [ _for(), a, _db(|part|user;%alias)=href, _upath(-1) ]]
                                                else:  [ _db(|bin|@user%)=_db(|@user%) ]



                    content:
                        [_css("div.userstuff"), _db()=text]
                        [_css("div.userstuff.module"), _db()=text]
                    crawl
        chapter:
            urls:
                chapter:
                    bps:
                        -
                            bp_cnfg: [works, _val(work)_, chapters, _val()_]
                            domain_type: d
                            main: true
                            query: 
                                show_comments: true
                                view_adult: true
                            frags: {}
                    regex:
                        title: "^[^,-]+  -  Chapter [^,-]+ - (?:[^,-]+,? )+ - (?:[^,-]+,? )+\[Archive of Our Own\]$"
                    actions:
                        checks:
                            title:
                                - [_in(ea_head), title, text==_regex(title)]
                                - true
                        data:
                            self:
                                params:
                                    prsv: null
                                    area: 
                                        chapters: [ _css(“#chapters”), [ _for(), div, class==”chapter”]]
                                data:
                                    most: 
                                        ref: work.work.chapter
                                        fitler: []
                                        subs: []

                                    work: 
                                        prsv: "|work"
                                        area: {}
                                        data:
                                            most:
                                                ref: work.work
                                                filter: []
                                                subs: []
                                            parts:
                                                prsv: "|work|part"
                                                area:
                                                    chapters: [_css("li.chapter"), [_css("select#selected_id"), [_for(), option, _noexists("selected")]]]
                                                data:
                                                    uid: [_in(chapters), _db(|work|part)=value]
                                                    idx: [_in(chapters), _db(|work|part;name)=text, _sfind(". ";>)]
                                                    idx: [_in(chapters), _db(|work|part;idx)=text, _sfind(".";<)]
                        content:
                        crawl:
    actions:
        init:
        - [ _name(tos), e_tos, _exists]
        - [ _no_soup, _skipif(!tos), e_tos_agree,  _click(1)]
        - [ _no_soup, _skipif(!tos), e_tos_agree2, _click(1)]
        - [ _no_soup, _skipif(!tos), e_tos_accept, _click(1)]
        listing_init:
        - []
        content_init:
        - [_wait(2), e_dl, _exists]
        - [e_author, _exists]
        dl_content:
        - [_no_soup, e_dl, _click(1), _wait(1)]
        - [_no_soup, e_dl_pdf, _click(1), _wait(1)]
    elements:
        #####################################################
        ### GLOBAL #########################################
        # -------- tos
        ea_tos : [body, [div, id==tos_prompt]]
        ec_tos_accept: [_css("#accept_tos")           ]
        ec_tos_agree:  [_css("#tos_agree")            ]
        ec_tos_agree2: [_css("#data_processing_agree")]


        #####################################################
        ### CONTENT #########################################
        #-----------navigation
        ec_chapter_index:    [_css("a.collapsed"),text=="Chapter Index"] 
        e_chapter_id:        [_in(ec_chapter_index), [select, id==selected_id, [        option, _exists(selected),  _db(|part;idx)_  =text, _slice(0:1), _db(|part;uid)=value]]]
        e_other_chapters_id: [_in(ec_chapter_index), [select, id==select_id,   [_for(), option, _exists(!selected), _db(|part;idx)_  =text, _slice(0:1), _db(|part;uid)=value]]]

        ec_dl:      [_css(".download"), a                      ]
        ec_dl2:     [_css(".download"),   [ul, [_for(), li, _scrape(content;type)_=text, _scrape(content;url)_href]]]

        #----------- meta
        ea_series:             [_css("dd.series"), [ span, class=="position"]]
        e_series_uname:        [_in(ea_series),          a, _db(|series;name)_   =text, _db(|series;uid)=href, _upath(-1)]
        e_series_idx:          [_in(ea_series),  _not(), a, _db(;idx)_           =text, _slice(5:;:-3)                   ]

        e_usrer_uname:         [_css("h3.byline"), [_for(), a, _db(|user;name)_ =text, _db(|user;uid)=href,_upath(1)_]]
        e_work_name:           [_css("h2.title"),              _db(|work;name)_ =text]
        e_work_dscp:           [_css(".summary"),  [_for(), p, _db(|dscp;val)_  =text]]

        # - tags
        e_rating:     [_css("dd.rating"),       _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_warning:    [_css("dd.warning"),      _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_category:   [_css("dd.category"),     _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_fandom:     [_css("dd.fandom"),       _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_rel:        [_css("dd.relationship"), _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_character:  [_css("dd.character"),    _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_freeform:   [_css("dd.freeform"),     _db(tag;>|*|group)_ =class, [_for(), li, [a, _db(tag;+)_=text]]]
        e_lang:       [_css("dd.language"),     _db(tag;>|*|group)_ =class,                  _db(tag;+)_=text]

        # - stats
        e_pub:        [_css("dd.published"),    _db(stat;created)_  =text]
        e_status:     [_css("dd.status"),       _db(stat;updated)_  =text]
        e_words:      [_css("dd.words"),        _db(stat;words)_    =text]
        e_comments:   [_css("dd.comments"),     _db(stat;comments)_ =text]
        e_kudos:      [_css("dd.kudos"),        _db(stat;likes)_    =text]
        e_hits:       [_css("dd.hits"),         _db(stat;views)_    =text]
        e_bookmarks:  [_css("dd.bookmarks"),[a, _db(stat;faves)_    =text]]

        #-----------Chapter
        e_chapters:            [_css("'#chapters'"),[_for(chapter), div, class==chapter]]

        e_chapter_head:        [_in(e_chapters), div, class=="chapter preface group"]
        e_chapter_dscp:        [_in(e_chapter_head),         div, id=="summary", [_for(), p, _db(|dscp)_ +=text            ]]
        e_chapter_idx:         [_in(e_chapter_head),         a,                              _db(;idx)_   =text, _slice(8:)]
        e_chapter_name:        [_in(e_chapter_head), _not(), a,                              _db(;name)_  =text, _slice(2:)]
        e_chapter_uid:         [_in(e_chapter_head),         a,                              _db(;uid)_   =href, _upath(-1)]


        e_chapter_body:        [_in(e_chapters), div, class=="userstuff module"]
        e_imgs:                [_in(e_chapter_body), [_for(), img, _db(|img)_  =src ]]
        e_chapter_body_text:   [_in(e_chapter_body), [_for(), p,   _db(|)_     =text]]


        #####################################################
        ### LISTINGS #########################################
        e_user_uid: [_in(e_listing), _db(|user;uid)_ =class, _wfind_all("user-";>) ]

        # ------------- head
        ea_head:         [_in(e_listing), [div, class=="header module"]]

        ea_head2:        [_in(ea_head), [h4]]
        e_user_name:     [_in(ea_head2),  [_for(1:), a, _db(|user;name)_  =href,  _upath(1)                    ]]
        e_listing_uname: [_in(ea_head2),  [_for(1),  a, _db(;uid)_        =href,  _upath(-1) _db(;name)_ =text ]]

        e_tags:          [_in(ea_head), [h5, [_for(), a, _db(|tag)_ =text, _db(|tag|group;name)_ ="Fandom" ]]]

        ea_tag2:         [_in(ea_head), ul, class =="required-tags"] 
        e_tags2:         [_in(ea_tags2), _for(), li,   [a, [span,  _db(|tag;name)_ =title, "_split(,)", _db(|tag|group;name)_ =class, _sfind(' -';<)]]] 

        e_stat_created:  [_in(ea_head), [p, _db(stat;created)_ =text, _type(datetime;dd mmm yyyy)]]

        # ------------- tags
        ea_tags3: [_in(ea_listing), ul, class =="tag commas"]
        e_tags3:  [_in(ea_tags3), _for(), li, _db(|tag|group)_ =class, [a, _db(|tag)_ =text, _sfind(" -","<")]]

        # ------------- dscp
        e_dscp:          [_in(ea_listing), [blockquote, [_for(), p, _db(|dscp;val)_ +=text, _list()]]]

        # ------------- *series
        ea_series:      [_in(ea_listing), ul, class =="series", [li]]
        e_idx:          [_in(ea_series), strong, _db(;idx)=1]
        e_series_uname: [_in(ea_series), a, _db(|series;uid)=href, _upath(-1), _db(|series;name)_=text]

        # ------------- stats
        ea_stats:        [_in(ea_listing), dl]
        e_stat_words:    [_in(ea_stats) [_css("dd.words"),     _db(stat:words)_    =text]]
        e_stat_works:    [_in(ea_stats) [_css("dd.works"),     _db(stat:works)_    =text]]
        e_stat_faves:    [_in(ea_stats) [_css("dd.bookmarks"), _db(stat:faves)_    =text]]
        e_stat_hits:     [_in(ea_stats) [_css("dd.hits"),      _db(stat:views)_    =text]]
        e_stat_language: [_in(ea_stats) [_css("dd.language"),  _db(stat:lang)_     =text]]
        e_chapters:      [_in(ea_stats) [_css("dd.chapters"),  _db(stat:lang)_     =text]]
        e_comments:      [_in(ea_stats) [_css("dd.comments"),  _db(stat:comments)_ =text]]
        e_kudos:         [_in(ea_stats) [_css("dd.kudos"),     _db(stat:likes)_    =text]]

        # ------------- iter
        ec_next: [ol.pagination, [li, class=next, [a]]]


        #####################################################
        ### LOGIN #########################################
        et_user:       [_css("#user_login")                      ]
        ec_remeber_me: [_css("#user_remeber_me")                 ]
        et_password:   [_css("#user_password")                   ]
        ec_submit:     [_css("#input.submit")                    ]
        e_token:       [input, name==authenticity_token          ]
        e_csrf:        [meta,  name==csrf-token,content          ]
sofurry:
    redirect: False
    params:
        login:   False
        init:    False
        content: False
        crawl:   False
    site-defs:
        folder:
            superclass:    node
            class: tgt
            subclass: bin
        view:
            superclass:    node
            class: tgt
            subclass: work
    dmns:
        d:
            hstns:               [www,'']
            hstn_var:            null
            tlds:                [com]
        u:
            hstns:               []
            hstn_var:            _name(user)_
            tlds:                [com]
    urls:
        user:
            user:
                node: True
                bp_cnfg: []
                query: {}
                domain_type: u
                alt_bp_cnfgs: {}
                actions:
                    init:
                        do:
                        - []
                    contnt:
                        do:
                        - []
                    crawl:
                        do:
                        - []
                elements: {}
            listings:
                node: False
                bp_cnfg:    [browse, user, stories]
                query:
                    stories-page: _val(page;;1)_
                domain_type: d
                alt_bp_cnfgs: 
                    listings_alt:
                        bp_cnfg:    [stories]
                        query:
                            by: _val()_
                            stories-page: _val(page;;1)_
                        domain_type: u
                actions:
                    init:
                        do:
                        - []
                    contnt:
                        do:
                        - []
                    crawl:
                        do:
                        - []
                elements: {}
        folder:
            folder:
                node: True
                bp_cnfg: [browse, folder, stories]
                query:
                    by: _site_uid(user)_
                    folder: _site_uid()_
                domain_type: d
                alt_bp_cnfgs: {}
                actions:
                    init:
                        do:
                        - []
                    contnt:
                        do:
                        - []
                    crawl:
                        do:
                        - []
                elements: 
                    e_lwf:                    [div, class=section sf-storyfolder-link]
                    e_lwf_work_list:          [div, class=section sf-storyfolder-link]
                    e_lwf_work_list_iter:     [_in, e_lwf_work_list, [_for, div, class=section-content-counter]]
                    ev_name:                  [_in, e_lwf, [div, class=section-title-highlight,                   _name(folder)_=text]]
                    ev_view_idx:              [_in, e_lwf_work_iter, [div, class=section-content-counter,[span,   _idx(view;folder)_=text]]]
                    ev_view_name:             [_in, e_lwf_work_iter, [div, class=section-content-list]  ,[a,      _name(view)_=text]]
                    ev_view_uid:              [_in, e_lwf_work_iter, [div, class=section-content-list]  ,[a,      _uid(view)_=href,_ubase]]
        view:
            view:
                node: True
                bp_cnfg: [view, _val()_]
                query: {}
                domain_type: d
                alt_bp_cnfgs: {}
                elements:
                    ev_user_uid:            [_css, "#sf-userinfo-outer",                         _uid(user)_=href, _uhost]
                    ev_title:               [span, id=sfContentTitle,                            _name(view)_=text]
                    ev_dscp:                [div,  id=sfContentDescription,                      _dscp(view)_=text]
                    ev_content:             [div,  id=sfContentBody,                             _content(view)_=text]
                    ev_tags:                [div,  id=submission_tags, [_for, a, class=sf-tag,   _tag(view)_=text]] 
                    ev_stats:               [div,  class=section-title, text=Stats, [_for, text, _stat(view)_=text]]
                    ec_dl_btn:              [a, href=Download ePub]
                actions:
                    init:
                        do:
                        - []
                    contnt:
                        do:
                        - []
                    crawl:
                        do:
                        - []
                elements: {}
    login:
        bp_cnfg: [d, user, login]
        pwd: LoginForm[sfLoginPassword]
        usr: LoginForm[sfLoginUsername]
        token: null
    actions:
        init:
            do:
            - []
        contnt:
            do:
            - []
        crawl:
            do:
            - []
    elements: {}
itch:
    redirect: False
    params:
        login:   False
        init:    False
        content: False
        crawl:   False
    site_defs: {}
    dmns:
        d:
            hstns:    ['', www]
            hstn_var: null
            tlds:     [io]
        u:
            hstns:    []
            hstn_var: _val(user|name)_
            tlds:     [io]
    urls:
        user:
            user:       
                node: True
                bp_cnfg: []
                domain_type: u
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:      
                node: True
                bp_cnfg: [_val(name)_]
                domain_type: u
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements:
            e_head_title:     [[head, title], [_text_]]
            e_dscr_raw:       [div,  class, formatted_description user_formatted]
            e_dls_class:      [div,  class, uploads]
            e_dl_class:       [div,  class, upload]
            e_dl_info_class:  [div,  class, info_column]
            e_dl_button:      [a,    class, button download_btn]
            e_comments:       [div,  class, game_comments_widget base_widget]
            e_csrf_token:     [meta, name,  csrf_token]
            e_view_more:      [a,    class, action_btn view_more]
            e_more_games:     [div,  class, game_grid_widget base_widget user_game_grid]
            e_other_game:     [a,    class, title game_link]
            e_dl_direct:      [a,    class, direct_download_btn]
furaffinity:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: [www,'']
            hstn_var:  null
            tlds:      [net]
    site_defs:
        view:
            superclass: node
            class: tgt
            subclass: work
    urls:
        user:
            user:      
                node: True
                bp_cnfg: [user, _val()_]
                domain_type: d
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            work_listing:      
                node: False
                bp_cnfg: [gallery, _val()_, _val(page;;1)_, _try(?)_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        view:
            view:      
                node: True
                bp_cnfg: [view, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements:
        AUTHOR:          [e_author, {text}]
        AUTHOR_STATS:    [e_joined, [where, [strong>, {text}]]]
        TITLE:           [e_title, {text}]
        TAGS:            [[and, e_tag_of, e_tag_ef], [for, e_tag, {text}]]
        DSCR:            [e_content,e_dscr]
        PDF:             [s_pdf]
        TXT:             [e_content, e_txt, {text}]
        CHRONO:          [e_chrons, [for, e_chrono, where, [strong>, {text}]]]
        CHRONI:          [e_chrons, [for, e_chroni, where, [strong>, {text}]]]
        STATS:           [e_stat_header, e_stats, [by, line, ['[7:],views[:3],faves[:1],comments[:1],vote[:1]']]]
        IMAGE:           [in, s_art for, w_work, where, e_contentimage]
        FOLDER_IMAGE:    [in s_art, in, e_folders for, e_folder_link]
        TITLES:          [in, s_titles for, w_work, where, e_titles]
        FOLDER_TITLES:   [in, s_titles, in, e_folders for, e_folder_link]
        JOURNALS:        [in, s_journals, for w_work]
        e_info: [div.info]
        e_tag2: [div, class='section-ody info",[div,[strong],[span]]]
        e_tag:  [section, class='tags-mobile',[span,  class='tags', [a]]]
        e_tag2: [section, class="folders-moile",[div,[div,[a]]]]
        e_joined: [span, class="hideonmoile" >registered<]
        e_text:     [div, class="submission-content"]
        e_title:    [.submission-title]
        e_author:   [a]
        e_views:    [div, class='views']
        e_favs:     [div, class='favorites']
        e_comments: [div, class='comments']
        e_rating:   [div, class='rating']
        e_date: [.popup_date]
        e_stats: [div, class='table',[div, class='highlight']]
        e_titles: [figcaption, [p ,[a]]]
blokfort:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]
    site_defs:
        user:
            superclass: node
            class: tgt
            subclass: work
            val: blokfort
    urls:
        work:
            work:      
                node: True
                bp_cnfg: [_val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        user:
            work_listing:     
                node: False
                bp_cnfg: [nsfw-comics]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
catbox:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [moe]
        f:
            hstns: [files]
            hstn_var:  null
            tlds:      [moe]
    site_defs:
        user:
            superclass: node
            class: tgt
            subclass: user
        collection:
            superclass: node
            class: tgt
            subclass: bin
        file:
            superclass: node
            class: tgt
            subclass: work
    urls:
        collection:
            collection:
                node: True
                bp_cnfg: [c, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        file:
            file:      
                node: True
                bp_cnfg: [_val()_, _try(_val(fext)_)]
                domain_type: f
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
google:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: [www,'']
            hstn_var:  null
            tlds:      [com]
        f:
            hstns: [drive]
            hstn_var:  null
            tlds:      [com]
        w:
            hstns: [docs]
            hstn_var:  null
            tlds:      [com]
    site_defs:
        file:
            superclass: node
            class: tgt
            subclass: work
    urls:
        file:
            doc:       
                node: True
                bp_cnfg: [document, d, _val()_, _try(edit)]
                domain_type: w
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            pub_doc:   
                node: True
                bp_cnfg: [document, d, e, _val()_, pub]
                domain_type: w
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            drive_file: 
                node: True
                bp_cnfg: [file, d, _val()_, _try(view)]
                domain_type: f
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
fiction:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    site_defs: {}
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [live]
    urls:
        user:
            user:      
                node: True
                bp_cnfg: [user, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:     
                node: True
                bp_cnfg: [stories, _val(name)_, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        part:
            part:      
                node: True
                bp_cnfg: [stories, _val(work|name)_, _val(work)_, _val(name)_, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
ghostbin:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]
    site_defs:
            folder:
                superclass: node
                class: non-tgt
                subclass: folder
                enabled_for:   _cls(node|site)
                childs: _cls(node|work)
                carrier:     null
                val:
                    tscope:    _mi(m;i)
                    tuniq:     _mi(0;0)
                    uscope:    null
                    uuniq:     _mi(0;1)
                    type:      _type(str)
    urls:
        work:
            work:     
                node: True
                bp_cnfg: [_try(_val(folder)_), _val_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
gitio:
    redirect: True
    params:
        enabled: False
    dmns:
        d:
            hstns:     ['',www]
            hstn_var:  null
            tlds:      [io]
            sld:       git

    site_defs: {}
    urls:
        _unkown:
            redirect:     
                core: False
                bp_cnfg: [_val(src|redirect;${dmns|sld})_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
hardbin:
    redirect: False
    params:
        enabled: False
        login:   False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]
    site_defs: {}
    urls:
        work:
            work:         
                node: True
                bp_cnfg: [ipfs, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    fetch:
        workflows:
                w: [a_init, a_content]
        actions:
                a_init:
                        url: [_url]
                a_content:
                        url: [IMAGES]
    elements: {}
literotica:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: [www,'']
            hstn_var:  null
            tlds:      [net,com]
    site_defs: {}
    urls:
        user:
            user:     
                node: True
                bp_cnfg: [users, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            work_listing:     
                node: False
                bp_cnfg: [_val(user)_, works, stories, all]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:     
                node: True
                bp_cnfg: [s, _val()_]
                domain_type: d
                query: 
                    page: _val(page;;1)
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
mcstories:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]

    site_defs: {}
    urls:
        site:
            user_listing:
                node: False
                bp_cnfg: [users, [_delim(.), index,html]]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        user:
            user:
                node: True
                bp_cnfg: [users, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            flash:
                node: False
                bp_cnfg: [_val()_, [_delim(.), index, html]]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            work:
                node: True
                bp_cnfg: [_val()_, [_delim(.), _val()_, _try(_val(fext)_]]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
mega:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [nz]
    site_defs:
        folder:
            superclass:     node
            class:          non-tgt
            subclass:       site
            enabled_for:    _cls(node|user;site) 
            childs:         _cls(folder;work) 
            carrier:        null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;i)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      _type(str)
    urls:
        domain:
            work_listing:
                node: false
                bp_cnfg: [_try(folder;_uid(folder)_)]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:
                node: True
                bp_cnfg: [_try(folder;_val(folder)_, file, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
pastebin:
    redirect: False
    params:
        enabled: True
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]
    site_defs:
        folder:
            superclass:     node
            class:          non-tgt
            subclass:       site
            enabled_for:    _cls(node|user;site) 
            childs:         _cls(folder;work) 
            carrier:        null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;i)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      _type(str)
    urls:
        user:
            user:      
                node: True
                bp_cnfg: [u, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        folder:
            folder:      
                node: True
                bp_cnfg: [u, _val(user)_, '1' , _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:      
                node: True
                bp_cnfg: [_val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements:
        e_w_dl:             [a, class=btn -small,txt=download]
        e_content_txt_area: [div, class=source text, [ol, class=text]]
        e_content_txt:      [_in, e_content_txt_area, [_for, li, txt]]

        e_login_usr:        [_css, "#loginform-username"]
        e_login_pwd:        [_css, "#loginform-password"]
        e_login_btn_submit: [button, type=submit, class=btn-big]

        e_csrf-param_name:  [meta, name=csrf-param, content]
        e_csrf-param:       [meta, name:=g_csrf-param, content]
pastefs:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]

    site_defs: {}
    urls:
        work:
            work:      
                node: True
                bp_cnfg: [pid, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
psstaudio:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns:     ['',www]
            hstn_var:  null
            tlds:      [com]
        p:
            hstns:     [pastes]
            hstn_var:  null
            tlds:      [com]

    site_defs: {}
    urls:
        work:
            work:
                node: True
                bp_cnfg: [post, _val()_]
                domain_type: p
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
poneb:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [in]

    site_defs: {}
    urls:
        user:
            user:
                node: True
                bp_cnfg: [u, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            paste_listing:
                node: False
                bp_cnfg: [u, _val()_, user]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:
                node: True
                bp_cnfg: [_val_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
githubusercontent:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns:     ['',www]
            hstn_var:  null
            tlds:      [com]
        f:
            hstns:     [raw]
            hstn_var:  null
            tlds:      [com]
    site_defs:
        repo:
            superclass:  node
            class:       non-tgt 
            subclass:    repo
            enabled_for: _cls(node|user)
            carrier: null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;0)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      str
        branch:
            superclass:  node
            class:       non-tgt 
            subclass:    branch
            enabled_for: _cls(node|repo)
            childs:      _cls(node|work)
            carrier: null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;0)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      str
        folder:
            superclass:  node
            class:       non-tgt 
            subclass:    folder
            enabled_for: _cls(node|branch)
            childs:      _cls(node|work)
            carrier: null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;0)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      str
    urls: 
        work:
            work:       
                node: True
                bp_cnfg: [_val(user)_, _val(repo)_, _val(branch)_, _try(_val(folder)_), [_delim(.), _val()_, _try(_val(src|fext)_)]]
                domain_type: f
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements:
rentry:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['', www]
            hstn_var:  null
            tlds:      [org, co]

    site_defs: {}
    urls:
        work:
            work:
                node: True
                bp_cnfg: [_val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
snekguy:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [com]

    site_defs:
        user:
            superclass:     node
            class:          tgt
            subclass:       user
            val:            snekguy
        folder:
            superclass:     node
            class:          non-tgt
            subclass:       folder
            enabled_for:    _cls(node|user;site) 
            childs:         _cls(folder;work) 
            carrier:        null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;i)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      _type(str)
        edition:
            superclass:     prop
            class:          column
            subclass:       edition
            enabled_for:    _cls(node|work) 
            carrier:        null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;0)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      _type(str)
    urls:
        user:
            work_listing:        
                node: False
                bp_cnfg: [stories]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:
                node: True
                bp_cnfg: [stories, _try(_val(folder)_), _val()_, _try(_val(edition)_)]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
snootgame:
    redirect: False
    params:
        enabled: False
        login: False
        content: False
        crawl:   False
    dmns:
        d:
            hstns: ['',www]
            hstn_var:  null
            tlds:      [xyz]
    site_defs:
        user:
            superclass:     node
            class:          tgt
            subclass:       user
            val:            caveman_anon
    urls:
        user:
            user:     
                node: true
                bp_cnfg: []
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
            work_listing: 
                node: False
                bp_cnfg: [en, download.html]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        work:
            work:      
                node: True
                bp_cnfg: [en, bin, [_delim(.), _val()_, zip]]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
fanfiction:
    redirect: False
    params:
        enabled: False
        login: False
                query: {}
                alt_bp_configs: {}
    dmns:
        d:
            hstns: [www,'']
            hstn_var:  null
            tlds:      [net]
    site_def: {}
    urls:
        user:
            user:
                node: True
                bp_cnfg:  [u, _val()_, _val(name)_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        part:
            part:
                node: True
                bp_cnfg:   [s, _val(work)_, _val()_, _val(work|name)_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}
reddit:
    redirect: False
    params:
        login:   False
        init:    False
        content: False
        crawl:   False
    dmns:
        d:
            hstns:        [www,'']
            hstn_var:     null
            tlds:         [com]
    site_def:
        sub:
            superclass:     node
            class:          non-tgt
            subclass:       sub
            enabled_for:    _cls(node|site) 
            carrier:        null
            val:
                tscope:    _mi(m;i)
                tuniq:     _mi(0;i)
                uscope:    null
                uuniq:     _mi(0;1)
                type:      _type(str)
            childs:         _cls(work) 
            multiparental:  False
            shared_child:   False
        work:
            subclass:       work
            shared_child:   True
    urls:
        user:
            user:
                node: True
                bp_cnfg:     [user, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        sub:
            sub:
                node: True
                bp_cnfg:     [r, _val()_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions:
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
        post:
            post:
                node: True
                bp_cnfg:     [r, _val(sub)_, comments, _val()_, _val(name)_]
                domain_type: d
                query: {}
                alt_bp_configs: {}
                actions: 
                    init:
                    - []
                    content:
                    - []
                    crawl:
                    - []
                elements: {}
    elements: {}